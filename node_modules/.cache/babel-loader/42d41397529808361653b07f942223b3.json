{"ast":null,"code":"export const field = ({\n  name,\n  value = '',\n  isRequired = false,\n  minLength = 0,\n  pattern = ''\n}) => {\n  const settings = {\n    name,\n    value,\n    errors: [],\n    validations: {}\n  };\n\n  if (isRequired) {\n    settings.validations.required = true;\n  }\n\n  if (minLength) {\n    settings.validations.minLength = minLength;\n  }\n\n  if (pattern) {\n    settings.validations.pattern = pattern;\n  }\n\n  return settings;\n};\nexport const PI = 3.14; //The default export\n//You'll import as usual\n\nexport default ((name, value, validations) => {\n  const errors = []; //required validation\n\n  if (validations.required && required(value)) {\n    // const errors = [`${name} is required`];\n    errors.push(\"\".concat(name, \" is required\"));\n  }\n\n  if (validations.minLength && minLength(value, validations.minLength)) {\n    errors.push(\"\".concat(name, \" should be no less than \").concat(validations.minLength, \" characters\"));\n  }\n\n  if (validations.pattern && pattern(value, validations.pattern)) {\n    errors.push(\"\".concat(name, \" invalid\"));\n  }\n\n  return errors;\n});\n\nconst required = value => !value;\n\nconst minLength = (value, min) => value.length < min;\n\nconst pattern = (value, pattern) => !pattern.test(value);","map":{"version":3,"sources":["/Users/kristina/Desktop/realtor/realtor/src/components/loginAndSignup/validator.jsx"],"names":["field","name","value","isRequired","minLength","pattern","settings","errors","validations","required","PI","push","min","length","test"],"mappings":"AAAA,OAAO,MAAMA,KAAK,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,KAAK,GAAE,EAAd;AAAkBC,EAAAA,UAAU,GAAG,KAA/B;AAAsCC,EAAAA,SAAS,GAAG,CAAlD;AAAqDC,EAAAA,OAAO,GAAG;AAA/D,CAAD,KAAwE;AAEzF,QAAMC,QAAQ,GAAG;AACbL,IAAAA,IADa;AAEbC,IAAAA,KAFa;AAGbK,IAAAA,MAAM,EAAE,EAHK;AAIbC,IAAAA,WAAW,EAAC;AAJC,GAAjB;;AAOA,MAAGL,UAAH,EAAc;AACVG,IAAAA,QAAQ,CAACE,WAAT,CAAqBC,QAArB,GAAgC,IAAhC;AACH;;AACD,MAAGL,SAAH,EAAa;AACTE,IAAAA,QAAQ,CAACE,WAAT,CAAqBJ,SAArB,GAAiCA,SAAjC;AACH;;AACD,MAAGC,OAAH,EAAW;AACPC,IAAAA,QAAQ,CAACE,WAAT,CAAqBH,OAArB,GAA+BA,OAA/B;AACH;;AAED,SAAOC,QAAP;AACH,CApBM;AAsBP,OAAO,MAAMI,EAAE,GAAG,IAAX,C,CAEP;AACA;;AACA,gBAAe,CAACT,IAAD,EAAOC,KAAP,EAAcM,WAAd,KAA8B;AACzC,QAAMD,MAAM,GAAG,EAAf,CADyC,CAGzC;;AACA,MAAGC,WAAW,CAACC,QAAZ,IAAwBA,QAAQ,CAACP,KAAD,CAAnC,EAA2C;AACvC;AACAK,IAAAA,MAAM,CAACI,IAAP,WAAeV,IAAf;AACH;;AAED,MAAGO,WAAW,CAACJ,SAAZ,IAAyBA,SAAS,CAACF,KAAD,EAAQM,WAAW,CAACJ,SAApB,CAArC,EAAoE;AAChEG,IAAAA,MAAM,CAACI,IAAP,WAAeV,IAAf,qCAA8CO,WAAW,CAACJ,SAA1D;AACH;;AAED,MAAGI,WAAW,CAACH,OAAZ,IAAuBA,OAAO,CAACH,KAAD,EAAQM,WAAW,CAACH,OAApB,CAAjC,EAA8D;AAC1DE,IAAAA,MAAM,CAACI,IAAP,WAAeV,IAAf;AACH;;AAED,SAAOM,MAAP;AACH,CAlBD;;AAoBA,MAAME,QAAQ,GAAGP,KAAK,IAAI,CAACA,KAA3B;;AAEA,MAAME,SAAS,GAAG,CAACF,KAAD,EAAQU,GAAR,KAAgBV,KAAK,CAACW,MAAN,GAAeD,GAAjD;;AAEA,MAAMP,OAAO,GAAG,CAACH,KAAD,EAAQG,OAAR,KAAoB,CAACA,OAAO,CAACS,IAAR,CAAaZ,KAAb,CAArC","sourcesContent":["export const field = ({name, value= '', isRequired = false, minLength = 0, pattern = ''}) => {\n\n    const settings = {\n        name,\n        value,\n        errors: [],\n        validations:{}\n    };\n\n    if(isRequired){\n        settings.validations.required = true;\n    }\n    if(minLength){\n        settings.validations.minLength = minLength;\n    }\n    if(pattern){\n        settings.validations.pattern = pattern;\n    }\n\n    return settings;\n};\n\nexport const PI = 3.14;\n\n//The default export\n//You'll import as usual\nexport default (name, value, validations) => {\n    const errors = [];\n\n    //required validation\n    if(validations.required && required(value)){\n        // const errors = [`${name} is required`];\n        errors.push(`${name} is required`);\n    }\n\n    if(validations.minLength && minLength(value, validations.minLength)){\n        errors.push(`${name} should be no less than ${validations.minLength} characters`);\n    }\n\n    if(validations.pattern && pattern(value, validations.pattern)){\n        errors.push(`${name} invalid`);\n    }\n\n    return errors;\n}\n\nconst required = value => !value;\n\nconst minLength = (value, min) => value.length < min;\n\nconst pattern = (value, pattern) => !pattern.test(value);"]},"metadata":{},"sourceType":"module"}