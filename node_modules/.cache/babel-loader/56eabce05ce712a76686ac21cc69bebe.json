{"ast":null,"code":"var _jsxFileName = \"/Users/kristina/Desktop/realtor/realtor/src/pages/search/gallery.jsx\";\nimport React from 'react';\nimport axios from \"axios\";\nimport SearchNav from \"../../components/SearchNav/searchNav\";\nimport Card from \"../../components/card/Card\";\nimport SortResults from \"./sortResults\";\nimport { searchLoadingData } from \"../../data-app/searchLoadingData\";\nimport { cities } from \"../../data-app/cities\";\nimport '../../css/galleryCss/search-line.css';\nimport '../../css/galleryCss/undernave.css';\nimport '../../css/galleryCss/reset.css';\nimport '../../css/galleryCss/phonenav.css';\nimport '../../css/galleryCss/styletopnav.css';\nimport '../../css/galleryCss/filterResults.css';\nimport '../../App.css';\nimport SearchPageLoading from \"../../components/Loading/searchPageLoading\";\n\nclass Gallery extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      const filterObj = this.state.filterObj;\n      this.setState({\n        [name]: value\n      });\n\n      if (name === 'city') {\n        let cur = this.state.filterObj;\n\n        if (value !== \"\") {\n          cur.cityFilter = value;\n          this.setState({\n            filterObj: cur\n          });\n        } else {\n          cur.cityFilter = false;\n          this.setState({\n            cityFilter: cur\n          });\n        }\n\n        this.filter();\n      }\n\n      if (name === 'minPrice') {\n        let cur = this.state.filterObj;\n\n        if (value !== \"\") {\n          cur.minPrice = value;\n          this.setState({\n            filterObj: cur\n          });\n        } else {\n          cur.minPrice = false;\n          this.setState({\n            filterObj\n          });\n        }\n\n        this.filter();\n      }\n\n      if (name === 'maxPrice') {\n        let cur = this.state.filterObj;\n\n        if (value !== \"\") {\n          cur.maxPrice = value;\n          this.setState({\n            filterObj: cur\n          });\n        } else {\n          cur.maxPrice = false;\n          this.setState({\n            filterObj\n          });\n        }\n\n        this.filter();\n      }\n\n      if (name === 'minBeds') {\n        let cur = this.state.filterObj;\n\n        if (value !== 0) {\n          cur.minBeds = value;\n          this.setState({\n            filterObj: cur\n          });\n        } else {\n          cur.minBeds = false;\n          this.setState({\n            filterObj\n          });\n        }\n\n        this.filter();\n      }\n\n      if (name === 'maxBeds') {\n        let cur = this.state.filterObj;\n\n        if (value !== Infinity) {\n          cur.maxBeds = value;\n          this.setState({\n            filterObj: cur\n          });\n        } else {\n          cur.maxBeds = false;\n          this.setState({\n            filterObj\n          });\n        }\n\n        this.filter();\n      }\n\n      if (name === 'minRooms') {\n        let cur = this.state.filterObj;\n\n        if (value !== 0) {\n          cur.minRooms = value;\n          this.setState({\n            filterObj: cur\n          });\n        } else {\n          cur.minRooms = false;\n          this.setState({\n            filterObj\n          });\n        }\n\n        this.filter();\n      }\n\n      if (name === 'maxRooms') {\n        let cur = this.state.filterObj;\n\n        if (value !== Infinity) {\n          cur.maxRooms = value;\n          this.setState({\n            filterObj: cur\n          });\n        } else {\n          cur.maxRooms = false;\n          this.setState({\n            filterObj\n          });\n        }\n\n        this.filter();\n      }\n\n      if (name === 'bedroomfilter') {\n        let cur = this.state.filterObj;\n\n        if (value !== 0) {\n          cur.bedroomfilter = value;\n          this.setState({\n            filterObj: cur\n          });\n        } else {\n          cur.bedroomfilter = false;\n          this.setState({\n            filterObj\n          });\n        }\n\n        this.filter();\n      }\n\n      if (name === 'roomfilter') {\n        let cur = this.state.filterObj;\n\n        if (value !== 0) {\n          cur.roomfilter = value;\n          this.setState({\n            filterObj: cur\n          });\n        } else {\n          cur.roomfilter = false;\n          this.setState({\n            filterObj\n          });\n        }\n\n        this.filter();\n      }\n\n      if (name === 'for_sell') {\n        let checkState = this.state.filterObj;\n        checkState.for_sell = !checkState.for_sell;\n        this.setState({\n          filterObj: checkState\n        });\n        this.filter();\n      }\n\n      if (name === 'for_rent') {\n        let checkState = this.state.filterObj;\n        checkState.for_rent = !checkState.for_rent;\n        this.setState({\n          filterObj: checkState\n        });\n        this.filter();\n      }\n\n      if (name === 'sortby') {\n        let checkState = this.state.filterObj;\n        checkState.sort_by = value;\n        this.setState({\n          filterObj: checkState\n        });\n        this.filter();\n      }\n\n      if (name === 'restArray') {\n        for (const property in filterObj) {\n          filterObj[property] = false;\n        }\n\n        this.setState({\n          isFilted: false\n        });\n      }\n    };\n\n    this.checkIfFilted = () => {\n      const filters = this.state.filterObj;\n\n      for (const property in filters) {\n        if (filters[property]) {\n          this.setState({\n            isFilted: true\n          });\n          break;\n        } else {\n          this.setState({\n            isFilted: false\n          });\n        }\n      }\n    };\n\n    this.getCitiesDataById = id => {\n      return cities.find(city => city.id === parseInt(id));\n    };\n\n    this.state = {\n      filterList: [],\n      filterObj: {\n        cityFilter: false,\n        minPrice: false,\n        maxPrice: false,\n        minBeds: false,\n        maxBeds: false,\n        minRooms: false,\n        maxRooms: false,\n        bedroomfilter: false,\n        roomfilter: false,\n        for_sell: false,\n        for_rent: false,\n        sort_by: false\n      },\n      allApartments: this.props.apartments,\n      filterArray: this.props.apartments,\n      isFilted: false,\n      loading: true\n    };\n  }\n\n  filter() {\n    const _this$state = this.state,\n          allApartments = _this$state.allApartments,\n          filterObj = _this$state.filterObj;\n    let filterArray = allApartments;\n\n    for (let i = 0; i < allApartments.length; i++) {\n      for (const property in filterObj) {\n        if (filterObj[property]) {\n          if (property === 'cityFilter') {\n            filterArray = filterArray.filter(apartment => this.checkText(apartment, filterObj.cityFilter));\n          }\n\n          if (property === 'minPrice') {\n            filterArray = filterArray.filter(apartment => this.checkMinRange(apartment, filterObj.minPrice, 'price'));\n          }\n\n          if (property === 'maxPrice') {\n            filterArray = filterArray.filter(apartment => this.checkMaxRange(apartment, filterObj.maxPrice, 'price'));\n          }\n\n          if (property === 'minBeds') {\n            filterArray = filterArray.filter(apartment => this.checkMinRange(apartment, filterObj.minBeds, 'number_of_beds'));\n          }\n\n          if (property === 'maxBeds') {\n            filterArray = filterArray.filter(apartment => this.checkMaxRange(apartment, filterObj.maxBeds, 'number_of_beds'));\n          }\n\n          if (property === 'roomfilter') {\n            filterArray = filterArray.filter(apartment => this.checkMinRange(apartment, filterObj.roomfilter, 'number_of_rooms'));\n          }\n\n          if (property === 'bedroomfilter') {\n            filterArray = filterArray.filter(apartment => this.checkMinRange(apartment, filterObj.bedroomfilter, 'number_of_beds'));\n          }\n\n          if (property === 'minRooms') {\n            filterArray = filterArray.filter(apartment => this.checkMinRange(apartment, filterObj.minBeds, 'number_of_rooms'));\n          }\n\n          if (property === 'maxRooms') {\n            filterArray = filterArray.filter(apartment => this.checkMaxRange(apartment, filterObj.maxRooms, 'number_of_rooms'));\n          }\n\n          if (property === 'for_sell') {\n            filterArray = filterArray.filter(apartment => apartment.for_sale);\n          }\n\n          if (property === 'for_rent') {\n            filterArray = filterArray.filter(apartment => apartment.for_sale);\n          }\n        }\n      }\n    }\n\n    if (this.state.filterObj.sort_by) {\n      if (this.state.filterObj.sort_by === 'formExpensive') {\n        filterArray = filterArray.sort((a, b) => a.price < b.price ? 1 : b.price < a.price ? -1 : 0);\n      } else if (this.state.filterObj.sort_by === 'formCheapest') {\n        filterArray = filterArray.sort((a, b) => a.price > b.price ? 1 : b.price > a.price ? -1 : 0);\n      }\n    }\n\n    this.checkIfFilted();\n    this.setState({\n      filterList: filterArray\n    });\n  }\n\n  checkText(apartment, value) {\n    let curCity = this.getCitiesDataById(apartment.cityId);\n    return curCity.label.toLowerCase().indexOf(value.toLowerCase()) !== -1 || curCity.country.toLowerCase().indexOf(value.toLowerCase()) !== -1 || (curCity.country.toLowerCase() + \" \" + curCity.label.toLowerCase()).indexOf(value.toLowerCase()) !== -1;\n  }\n\n  componentDidMount() {\n    this.getdata();\n\n    if (this.props.routerData) {\n      let cur = this.state.filterObj;\n      cur.cityFilter = this.props.routerData;\n      this.setState({\n        filterObj: cur\n      });\n      document.getElementById('searchInput').value = this.props.routerData;\n      this.filter();\n    }\n  }\n\n  async getdata() {\n    const data = await axios.get(\"http://localhost:5000/apartments\");\n    this.setState({\n      allApartments: data.data.apartments,\n      loading: false\n    });\n  }\n\n  checkMinRange(value, min, type) {\n    let curVal = value[type];\n\n    if (type === 'price') {\n      curVal = value[type] * 100000;\n    }\n\n    min = min === undefined || isNaN(min) || min === '' ? 0 : min;\n    return curVal >= min;\n  }\n\n  checkMaxRange(value, max, type) {\n    let curVal = value[type];\n\n    if (type === 'price') {\n      curVal = value[type] * 100000;\n    }\n\n    max = max === undefined || isNaN(max) || max === '' ? Infinity : max;\n    return curVal <= max;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(SearchNav, {\n      handleInputChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }), this.state.loading ? React.createElement(SearchPageLoading, {\n      array: searchLoadingData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      className: 'container-fluid',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(SortResults, {\n      resultsLength: this.state.allApartments.length,\n      handleInputChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: 'apartment_row',\n      className: 'row',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, this.state.allApartments.map((item, i) => {\n      return React.createElement(Card, Object.assign({}, item, {\n        cardType: 'apartment',\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }));\n    }))));\n  }\n\n}\n\nexport default Gallery;","map":{"version":3,"sources":["/Users/kristina/Desktop/realtor/realtor/src/pages/search/gallery.jsx"],"names":["React","axios","SearchNav","Card","SortResults","searchLoadingData","cities","SearchPageLoading","Gallery","Component","constructor","props","handleInputChange","event","target","name","value","filterObj","state","setState","cur","cityFilter","filter","minPrice","maxPrice","minBeds","Infinity","maxBeds","minRooms","maxRooms","bedroomfilter","roomfilter","checkState","for_sell","for_rent","sort_by","property","isFilted","checkIfFilted","filters","getCitiesDataById","id","find","city","parseInt","filterList","allApartments","apartments","filterArray","loading","i","length","apartment","checkText","checkMinRange","checkMaxRange","for_sale","sort","a","b","price","curCity","cityId","label","toLowerCase","indexOf","country","componentDidMount","getdata","routerData","document","getElementById","data","get","min","type","curVal","undefined","isNaN","max","render","map","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,iBAAR,QAAgC,kCAAhC;AACA,SAAQC,MAAR,QAAqB,uBAArB;AACA,OAAO,sCAAP;AACA,OAAO,oCAAP;AACA,OAAO,gCAAP;AACA,OAAO,mCAAP;AACA,OAAO,sCAAP;AACA,OAAO,wCAAP;AACA,OAAO,eAAP;AACA,OAAOC,iBAAP,MAA8B,4CAA9B;;AAEA,MAAMC,OAAN,SAAsBR,KAAK,CAACS,SAA5B,CAAsC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAYlBC,iBAZkB,GAYGC,KAAD,IAAW;AAAA,4BACLA,KAAK,CAACC,MADD;AAAA,YACpBC,IADoB,iBACpBA,IADoB;AAAA,YACdC,KADc,iBACdA,KADc;AAAA,YAEpBC,SAFoB,GAEP,KAAKC,KAFE,CAEpBD,SAFoB;AAG3B,WAAKE,QAAL,CAAc;AACV,SAACJ,IAAD,GAAQC;AADE,OAAd;;AAGA,UAAID,IAAI,KAAK,MAAb,EAAqB;AACjB,YAAIK,GAAG,GAAG,KAAKF,KAAL,CAAWD,SAArB;;AACA,YAAID,KAAK,KAAK,EAAd,EAAkB;AACdI,UAAAA,GAAG,CAACC,UAAJ,GAAiBL,KAAjB;AACA,eAAKG,QAAL,CAAc;AAACF,YAAAA,SAAS,EAAEG;AAAZ,WAAd;AACH,SAHD,MAGO;AACHA,UAAAA,GAAG,CAACC,UAAJ,GAAiB,KAAjB;AACA,eAAKF,QAAL,CAAc;AAACE,YAAAA,UAAU,EAAED;AAAb,WAAd;AACH;;AACD,aAAKE,MAAL;AACH;;AACD,UAAIP,IAAI,KAAK,UAAb,EAAwB;AACpB,YAAIK,GAAG,GAAG,KAAKF,KAAL,CAAWD,SAArB;;AACA,YAAID,KAAK,KAAK,EAAd,EAAkB;AACdI,UAAAA,GAAG,CAACG,QAAJ,GAAeP,KAAf;AACA,eAAKG,QAAL,CAAc;AAACF,YAAAA,SAAS,EAAEG;AAAZ,WAAd;AACH,SAHD,MAGM;AACFA,UAAAA,GAAG,CAACG,QAAJ,GAAe,KAAf;AACA,eAAKJ,QAAL,CAAc;AAACF,YAAAA;AAAD,WAAd;AACH;;AACD,aAAKK,MAAL;AACH;;AACD,UAAIP,IAAI,KAAK,UAAb,EAAwB;AACpB,YAAIK,GAAG,GAAG,KAAKF,KAAL,CAAWD,SAArB;;AACA,YAAID,KAAK,KAAK,EAAd,EAAkB;AACdI,UAAAA,GAAG,CAACI,QAAJ,GAAeR,KAAf;AACA,eAAKG,QAAL,CAAc;AAACF,YAAAA,SAAS,EAAEG;AAAZ,WAAd;AACH,SAHD,MAGM;AACFA,UAAAA,GAAG,CAACI,QAAJ,GAAe,KAAf;AACA,eAAKL,QAAL,CAAc;AAACF,YAAAA;AAAD,WAAd;AACH;;AACD,aAAKK,MAAL;AACH;;AACD,UAAIP,IAAI,KAAK,SAAb,EAAuB;AACnB,YAAIK,GAAG,GAAG,KAAKF,KAAL,CAAWD,SAArB;;AACA,YAAID,KAAK,KAAK,CAAd,EAAiB;AACbI,UAAAA,GAAG,CAACK,OAAJ,GAAcT,KAAd;AACA,eAAKG,QAAL,CAAc;AAACF,YAAAA,SAAS,EAAEG;AAAZ,WAAd;AACH,SAHD,MAGM;AACFA,UAAAA,GAAG,CAACK,OAAJ,GAAc,KAAd;AACA,eAAKN,QAAL,CAAc;AAACF,YAAAA;AAAD,WAAd;AACH;;AACD,aAAKK,MAAL;AACH;;AACD,UAAIP,IAAI,KAAK,SAAb,EAAuB;AACnB,YAAIK,GAAG,GAAG,KAAKF,KAAL,CAAWD,SAArB;;AACA,YAAID,KAAK,KAAKU,QAAd,EAAwB;AACpBN,UAAAA,GAAG,CAACO,OAAJ,GAAcX,KAAd;AACA,eAAKG,QAAL,CAAc;AAACF,YAAAA,SAAS,EAAEG;AAAZ,WAAd;AACH,SAHD,MAGM;AACFA,UAAAA,GAAG,CAACO,OAAJ,GAAc,KAAd;AACA,eAAKR,QAAL,CAAc;AAACF,YAAAA;AAAD,WAAd;AACH;;AACD,aAAKK,MAAL;AACH;;AACD,UAAIP,IAAI,KAAK,UAAb,EAAwB;AACpB,YAAIK,GAAG,GAAG,KAAKF,KAAL,CAAWD,SAArB;;AACA,YAAID,KAAK,KAAK,CAAd,EAAiB;AACbI,UAAAA,GAAG,CAACQ,QAAJ,GAAeZ,KAAf;AACA,eAAKG,QAAL,CAAc;AAACF,YAAAA,SAAS,EAAEG;AAAZ,WAAd;AACH,SAHD,MAGM;AACFA,UAAAA,GAAG,CAACQ,QAAJ,GAAe,KAAf;AACA,eAAKT,QAAL,CAAc;AAACF,YAAAA;AAAD,WAAd;AACH;;AACD,aAAKK,MAAL;AACH;;AACD,UAAIP,IAAI,KAAK,UAAb,EAAwB;AACpB,YAAIK,GAAG,GAAG,KAAKF,KAAL,CAAWD,SAArB;;AACA,YAAID,KAAK,KAAKU,QAAd,EAAwB;AACpBN,UAAAA,GAAG,CAACS,QAAJ,GAAeb,KAAf;AACA,eAAKG,QAAL,CAAc;AAACF,YAAAA,SAAS,EAAEG;AAAZ,WAAd;AACH,SAHD,MAGM;AACFA,UAAAA,GAAG,CAACS,QAAJ,GAAe,KAAf;AACA,eAAKV,QAAL,CAAc;AAACF,YAAAA;AAAD,WAAd;AACH;;AACD,aAAKK,MAAL;AACH;;AACD,UAAIP,IAAI,KAAK,eAAb,EAA6B;AACzB,YAAIK,GAAG,GAAG,KAAKF,KAAL,CAAWD,SAArB;;AACA,YAAID,KAAK,KAAK,CAAd,EAAiB;AACbI,UAAAA,GAAG,CAACU,aAAJ,GAAoBd,KAApB;AACA,eAAKG,QAAL,CAAc;AAACF,YAAAA,SAAS,EAAEG;AAAZ,WAAd;AACH,SAHD,MAGM;AACFA,UAAAA,GAAG,CAACU,aAAJ,GAAoB,KAApB;AACA,eAAKX,QAAL,CAAc;AAACF,YAAAA;AAAD,WAAd;AACH;;AACD,aAAKK,MAAL;AACH;;AACD,UAAIP,IAAI,KAAK,YAAb,EAA0B;AACtB,YAAIK,GAAG,GAAG,KAAKF,KAAL,CAAWD,SAArB;;AACA,YAAID,KAAK,KAAK,CAAd,EAAiB;AACbI,UAAAA,GAAG,CAACW,UAAJ,GAAiBf,KAAjB;AACA,eAAKG,QAAL,CAAc;AAACF,YAAAA,SAAS,EAAEG;AAAZ,WAAd;AACH,SAHD,MAGM;AACFA,UAAAA,GAAG,CAACW,UAAJ,GAAiB,KAAjB;AACA,eAAKZ,QAAL,CAAc;AAACF,YAAAA;AAAD,WAAd;AACH;;AACD,aAAKK,MAAL;AACH;;AACD,UAAIP,IAAI,KAAK,UAAb,EAAwB;AACpB,YAAIiB,UAAU,GAAG,KAAKd,KAAL,CAAWD,SAA5B;AACAe,QAAAA,UAAU,CAACC,QAAX,GAAsB,CAACD,UAAU,CAACC,QAAlC;AACA,aAAKd,QAAL,CAAc;AAACF,UAAAA,SAAS,EAACe;AAAX,SAAd;AACA,aAAKV,MAAL;AACH;;AACD,UAAIP,IAAI,KAAK,UAAb,EAAwB;AACpB,YAAIiB,UAAU,GAAG,KAAKd,KAAL,CAAWD,SAA5B;AACAe,QAAAA,UAAU,CAACE,QAAX,GAAsB,CAACF,UAAU,CAACE,QAAlC;AACA,aAAKf,QAAL,CAAc;AAACF,UAAAA,SAAS,EAACe;AAAX,SAAd;AACA,aAAKV,MAAL;AACH;;AACD,UAAIP,IAAI,KAAK,QAAb,EAAsB;AAClB,YAAIiB,UAAU,GAAG,KAAKd,KAAL,CAAWD,SAA5B;AACAe,QAAAA,UAAU,CAACG,OAAX,GAAqBnB,KAArB;AACA,aAAKG,QAAL,CAAc;AAACF,UAAAA,SAAS,EAACe;AAAX,SAAd;AACA,aAAKV,MAAL;AACH;;AACD,UAAIP,IAAI,KAAK,WAAb,EAAyB;AACrB,aAAK,MAAMqB,QAAX,IAAuBnB,SAAvB,EAAiC;AAC7BA,UAAAA,SAAS,CAACmB,QAAD,CAAT,GAAsB,KAAtB;AACH;;AACD,aAAKjB,QAAL,CAAc;AAACkB,UAAAA,QAAQ,EAAC;AAAV,SAAd;AACH;AACJ,KA7IiB;;AAAA,SAkMlBC,aAlMkB,GAkMH,MAAM;AACjB,YAAMC,OAAO,GAAG,KAAKrB,KAAL,CAAWD,SAA3B;;AACA,WAAK,MAAMmB,QAAX,IAAuBG,OAAvB,EAA+B;AAC3B,YAAIA,OAAO,CAACH,QAAD,CAAX,EAAsB;AAClB,eAAKjB,QAAL,CAAc;AAACkB,YAAAA,QAAQ,EAAC;AAAV,WAAd;AACA;AACH,SAHD,MAGO;AACH,eAAKlB,QAAL,CAAc;AAACkB,YAAAA,QAAQ,EAAC;AAAV,WAAd;AACH;AACJ;AACJ,KA5MiB;;AAAA,SAkOlBG,iBAlOkB,GAkOGC,EAAD,IAAQ;AACxB,aAAOnC,MAAM,CAACoC,IAAP,CAAYC,IAAI,IAAIA,IAAI,CAACF,EAAL,KAAYG,QAAQ,CAACH,EAAD,CAAxC,CAAP;AACH,KApOiB;;AAEd,SAAKvB,KAAL,GAAa;AACT2B,MAAAA,UAAU,EAAC,EADF;AAET5B,MAAAA,SAAS,EAAC;AAACI,QAAAA,UAAU,EAAC,KAAZ;AAAkBE,QAAAA,QAAQ,EAAC,KAA3B;AAAiCC,QAAAA,QAAQ,EAAC,KAA1C;AAAgDC,QAAAA,OAAO,EAAC,KAAxD;AAA8DE,QAAAA,OAAO,EAAC,KAAtE;AAA4EC,QAAAA,QAAQ,EAAC,KAArF;AAA2FC,QAAAA,QAAQ,EAAC,KAApG;AAA0GC,QAAAA,aAAa,EAAC,KAAxH;AAA8HC,QAAAA,UAAU,EAAC,KAAzI;AAA+IE,QAAAA,QAAQ,EAAC,KAAxJ;AAA8JC,QAAAA,QAAQ,EAAC,KAAvK;AAA6KC,QAAAA,OAAO,EAAC;AAArL,OAFD;AAGTW,MAAAA,aAAa,EAAE,KAAKnC,KAAL,CAAWoC,UAHjB;AAITC,MAAAA,WAAW,EAAE,KAAKrC,KAAL,CAAWoC,UAJf;AAKTV,MAAAA,QAAQ,EAAC,KALA;AAMTY,MAAAA,OAAO,EAAC;AANC,KAAb;AAQH;;AAoID3B,EAAAA,MAAM,GAAE;AAAA,wBAC+B,KAAKJ,KADpC;AAAA,UACG4B,aADH,eACGA,aADH;AAAA,UACkB7B,SADlB,eACkBA,SADlB;AAEJ,QAAI+B,WAAW,GAAGF,aAAlB;;AACA,SAAK,IAAII,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACJ,aAAa,CAACK,MAA7B,EAAoCD,CAAC,EAArC,EAAwC;AACpC,WAAK,MAAMd,QAAX,IAAuBnB,SAAvB,EAAiC;AAC7B,YAAIA,SAAS,CAACmB,QAAD,CAAb,EAAwB;AACpB,cAAIA,QAAQ,KAAK,YAAjB,EAA8B;AAC1BY,YAAAA,WAAW,GAAGA,WAAW,CAAC1B,MAAZ,CAAmB8B,SAAS,IAAI,KAAKC,SAAL,CAAeD,SAAf,EAAyBnC,SAAS,CAACI,UAAnC,CAAhC,CAAd;AACH;;AACD,cAAIe,QAAQ,KAAK,UAAjB,EAA4B;AACxBY,YAAAA,WAAW,GAAGA,WAAW,CAAC1B,MAAZ,CAAmB8B,SAAS,IAAI,KAAKE,aAAL,CAAmBF,SAAnB,EAA6BnC,SAAS,CAACM,QAAvC,EAAgD,OAAhD,CAAhC,CAAd;AACH;;AACD,cAAIa,QAAQ,KAAK,UAAjB,EAA4B;AACxBY,YAAAA,WAAW,GAAGA,WAAW,CAAC1B,MAAZ,CAAmB8B,SAAS,IAAI,KAAKG,aAAL,CAAmBH,SAAnB,EAA6BnC,SAAS,CAACO,QAAvC,EAAgD,OAAhD,CAAhC,CAAd;AACH;;AACD,cAAIY,QAAQ,KAAK,SAAjB,EAA2B;AACvBY,YAAAA,WAAW,GAAGA,WAAW,CAAC1B,MAAZ,CAAmB8B,SAAS,IAAI,KAAKE,aAAL,CAAmBF,SAAnB,EAA6BnC,SAAS,CAACQ,OAAvC,EAA+C,gBAA/C,CAAhC,CAAd;AACH;;AACD,cAAIW,QAAQ,KAAK,SAAjB,EAA2B;AACvBY,YAAAA,WAAW,GAAGA,WAAW,CAAC1B,MAAZ,CAAmB8B,SAAS,IAAI,KAAKG,aAAL,CAAmBH,SAAnB,EAA6BnC,SAAS,CAACU,OAAvC,EAA+C,gBAA/C,CAAhC,CAAd;AACH;;AACD,cAAIS,QAAQ,KAAK,YAAjB,EAA8B;AAC1BY,YAAAA,WAAW,GAAGA,WAAW,CAAC1B,MAAZ,CAAmB8B,SAAS,IAAI,KAAKE,aAAL,CAAmBF,SAAnB,EAA6BnC,SAAS,CAACc,UAAvC,EAAkD,iBAAlD,CAAhC,CAAd;AACH;;AACD,cAAIK,QAAQ,KAAK,eAAjB,EAAiC;AAC7BY,YAAAA,WAAW,GAAGA,WAAW,CAAC1B,MAAZ,CAAmB8B,SAAS,IAAI,KAAKE,aAAL,CAAmBF,SAAnB,EAA6BnC,SAAS,CAACa,aAAvC,EAAqD,gBAArD,CAAhC,CAAd;AACH;;AACD,cAAIM,QAAQ,KAAK,UAAjB,EAA4B;AACxBY,YAAAA,WAAW,GAAGA,WAAW,CAAC1B,MAAZ,CAAmB8B,SAAS,IAAI,KAAKE,aAAL,CAAmBF,SAAnB,EAA6BnC,SAAS,CAACQ,OAAvC,EAA+C,iBAA/C,CAAhC,CAAd;AACH;;AACD,cAAIW,QAAQ,KAAK,UAAjB,EAA4B;AACxBY,YAAAA,WAAW,GAAGA,WAAW,CAAC1B,MAAZ,CAAmB8B,SAAS,IAAI,KAAKG,aAAL,CAAmBH,SAAnB,EAA6BnC,SAAS,CAACY,QAAvC,EAAgD,iBAAhD,CAAhC,CAAd;AACH;;AACD,cAAIO,QAAQ,KAAK,UAAjB,EAA4B;AACxBY,YAAAA,WAAW,GAAGA,WAAW,CAAC1B,MAAZ,CAAmB8B,SAAS,IAAIA,SAAS,CAACI,QAA1C,CAAd;AACH;;AACD,cAAIpB,QAAQ,KAAK,UAAjB,EAA4B;AACxBY,YAAAA,WAAW,GAAGA,WAAW,CAAC1B,MAAZ,CAAmB8B,SAAS,IAAIA,SAAS,CAACI,QAA1C,CAAd;AACH;AACJ;AACJ;AACJ;;AACD,QAAI,KAAKtC,KAAL,CAAWD,SAAX,CAAqBkB,OAAzB,EAAiC;AAC7B,UAAI,KAAKjB,KAAL,CAAWD,SAAX,CAAqBkB,OAArB,KAAiC,eAArC,EAAqD;AACjDa,QAAAA,WAAW,GAAGA,WAAW,CAACS,IAAZ,CAAiB,CAACC,CAAD,EAAGC,CAAH,KAAUD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAb,GAAsB,CAAtB,GAA4BD,CAAC,CAACC,KAAF,GAAUF,CAAC,CAACE,KAAb,GAAsB,CAAC,CAAvB,GAA2B,CAAhF,CAAd;AACH,OAFD,MAEO,IAAI,KAAK1C,KAAL,CAAWD,SAAX,CAAqBkB,OAArB,KAAiC,cAArC,EAAoD;AACvDa,QAAAA,WAAW,GAAGA,WAAW,CAACS,IAAZ,CAAiB,CAACC,CAAD,EAAGC,CAAH,KAAUD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAb,GAAsB,CAAtB,GAA4BD,CAAC,CAACC,KAAF,GAAUF,CAAC,CAACE,KAAb,GAAsB,CAAC,CAAvB,GAA2B,CAAhF,CAAd;AACH;AACJ;;AACD,SAAKtB,aAAL;AACA,SAAKnB,QAAL,CAAc;AAAC0B,MAAAA,UAAU,EAACG;AAAZ,KAAd;AACH;;AAYDK,EAAAA,SAAS,CAACD,SAAD,EAAWpC,KAAX,EAAiB;AACtB,QAAI6C,OAAO,GAAG,KAAKrB,iBAAL,CAAuBY,SAAS,CAACU,MAAjC,CAAd;AACA,WAAOD,OAAO,CAACE,KAAR,CAAcC,WAAd,GAA4BC,OAA5B,CAAoCjD,KAAK,CAACgD,WAAN,EAApC,MAA6D,CAAC,CAA9D,IACHH,OAAO,CAACK,OAAR,CAAgBF,WAAhB,GAA8BC,OAA9B,CAAsCjD,KAAK,CAACgD,WAAN,EAAtC,MAA+D,CAAC,CAD7D,IAEH,CAACH,OAAO,CAACK,OAAR,CAAgBF,WAAhB,KAA8B,GAA9B,GAAkCH,OAAO,CAACE,KAAR,CAAcC,WAAd,EAAnC,EAAgEC,OAAhE,CAAwEjD,KAAK,CAACgD,WAAN,EAAxE,MAAiG,CAAC,CAFtG;AAGH;;AACDG,EAAAA,iBAAiB,GAAE;AACf,SAAKC,OAAL;;AACA,QAAI,KAAKzD,KAAL,CAAW0D,UAAf,EAA0B;AACtB,UAAIjD,GAAG,GAAG,KAAKF,KAAL,CAAWD,SAArB;AACAG,MAAAA,GAAG,CAACC,UAAJ,GAAiB,KAAKV,KAAL,CAAW0D,UAA5B;AACA,WAAKlD,QAAL,CAAc;AAACF,QAAAA,SAAS,EAAEG;AAAZ,OAAd;AACAkD,MAAAA,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCvD,KAAvC,GAA+C,KAAKL,KAAL,CAAW0D,UAA1D;AACA,WAAK/C,MAAL;AACH;AACJ;;AACD,QAAM8C,OAAN,GAAe;AACX,UAAMI,IAAI,GAAG,MAAMvE,KAAK,CAACwE,GAAN,oCAAnB;AACA,SAAKtD,QAAL,CAAc;AAAC2B,MAAAA,aAAa,EAAC0B,IAAI,CAACA,IAAL,CAAUzB,UAAzB;AAAoCE,MAAAA,OAAO,EAAC;AAA5C,KAAd;AACH;;AAKDK,EAAAA,aAAa,CAACtC,KAAD,EAAO0D,GAAP,EAAWC,IAAX,EAAiB;AAC1B,QAAIC,MAAM,GAAG5D,KAAK,CAAC2D,IAAD,CAAlB;;AACA,QAAIA,IAAI,KAAK,OAAb,EAAqB;AACjBC,MAAAA,MAAM,GAAG5D,KAAK,CAAC2D,IAAD,CAAL,GAAY,MAArB;AACH;;AACDD,IAAAA,GAAG,GAAIA,GAAG,KAAKG,SAAR,IAAqBC,KAAK,CAACJ,GAAD,CAA1B,IAAmCA,GAAG,KAAK,EAA5C,GAAkD,CAAlD,GAAuDA,GAA7D;AACA,WAAQE,MAAM,IAAIF,GAAlB;AACH;;AACDnB,EAAAA,aAAa,CAACvC,KAAD,EAAO+D,GAAP,EAAWJ,IAAX,EAAiB;AAC1B,QAAIC,MAAM,GAAG5D,KAAK,CAAC2D,IAAD,CAAlB;;AACA,QAAIA,IAAI,KAAK,OAAb,EAAqB;AACjBC,MAAAA,MAAM,GAAG5D,KAAK,CAAC2D,IAAD,CAAL,GAAY,MAArB;AACH;;AACDI,IAAAA,GAAG,GAAIA,GAAG,KAAKF,SAAR,IAAqBC,KAAK,CAACC,GAAD,CAA1B,IAAmCA,GAAG,KAAK,EAA5C,GAAkDrD,QAAlD,GAA8DqD,GAApE;AACA,WAAQH,MAAM,IAAIG,GAAlB;AACH;;AAGDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,iBAAiB,EAAE,KAAKpE,iBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEK,KAAKM,KAAL,CAAW+B,OAAX,GAAqB,oBAAC,iBAAD;AAAmB,MAAA,KAAK,EAAE5C,iBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArB,GACD;AAAK,MAAA,SAAS,EAAE,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAa,MAAA,aAAa,EAAE,KAAKa,KAAL,CAAW4B,aAAX,CAAyBK,MAArD;AAA6D,MAAA,iBAAiB,EAAE,KAAKvC,iBAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,EAAE,EAAE,eAAT;AAA0B,MAAA,SAAS,EAAE,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACS,KAAKM,KAAL,CAAW4B,aAAX,CAAyBmC,GAAzB,CAA6B,CAACC,IAAD,EAAMhC,CAAN,KAAY;AAC1C,aACI,oBAAC,IAAD,oBAAUgC,IAAV;AAAgB,QAAA,QAAQ,EAAE,WAA1B;AAAwC,QAAA,GAAG,EAAIhC,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AAEE,KAHD,CADT,CAFJ,CAHJ,CADJ;AAkBH;;AA3QiC;;AA8QtC,eAAe1C,OAAf","sourcesContent":["import React from 'react';\nimport axios from \"axios\";\n\nimport SearchNav from \"../../components/SearchNav/searchNav\";\nimport Card from \"../../components/card/Card\";\nimport SortResults from \"./sortResults\";\nimport {searchLoadingData} from \"../../data-app/searchLoadingData\";\nimport {cities} from \"../../data-app/cities\";\nimport '../../css/galleryCss/search-line.css';\nimport '../../css/galleryCss/undernave.css';\nimport '../../css/galleryCss/reset.css';\nimport '../../css/galleryCss/phonenav.css';\nimport '../../css/galleryCss/styletopnav.css';\nimport '../../css/galleryCss/filterResults.css';\nimport '../../App.css';\nimport SearchPageLoading from \"../../components/Loading/searchPageLoading\";\n\nclass Gallery extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            filterList:[],\n            filterObj:{cityFilter:false,minPrice:false,maxPrice:false,minBeds:false,maxBeds:false,minRooms:false,maxRooms:false,bedroomfilter:false,roomfilter:false,for_sell:false,for_rent:false,sort_by:false},\n            allApartments: this.props.apartments,\n            filterArray: this.props.apartments,\n            isFilted:false,\n            loading:true,\n        }\n    }\n\n    handleInputChange = (event) => {\n        const {name, value} = event.target;\n        const {filterObj} = this.state;\n        this.setState({\n            [name]: value\n        });\n        if (name === 'city') {\n            let cur = this.state.filterObj;\n            if (value !== \"\") {\n                cur.cityFilter = value;\n                this.setState({filterObj: cur})\n            } else {\n                cur.cityFilter = false;\n                this.setState({cityFilter: cur})\n            }\n            this.filter()\n        }\n        if (name === 'minPrice'){\n            let cur = this.state.filterObj;\n            if (value !== \"\") {\n                cur.minPrice = value;\n                this.setState({filterObj: cur});\n            }else {\n                cur.minPrice = false;\n                this.setState({filterObj})\n            }\n            this.filter()\n        }\n        if (name === 'maxPrice'){\n            let cur = this.state.filterObj;\n            if (value !== \"\") {\n                cur.maxPrice = value;\n                this.setState({filterObj: cur});\n            }else {\n                cur.maxPrice = false;\n                this.setState({filterObj})\n            }\n            this.filter()\n        }\n        if (name === 'minBeds'){\n            let cur = this.state.filterObj;\n            if (value !== 0) {\n                cur.minBeds = value;\n                this.setState({filterObj: cur});\n            }else {\n                cur.minBeds = false;\n                this.setState({filterObj})\n            }\n            this.filter()\n        }\n        if (name === 'maxBeds'){\n            let cur = this.state.filterObj;\n            if (value !== Infinity) {\n                cur.maxBeds = value;\n                this.setState({filterObj: cur});\n            }else {\n                cur.maxBeds = false;\n                this.setState({filterObj})\n            }\n            this.filter()\n        }\n        if (name === 'minRooms'){\n            let cur = this.state.filterObj;\n            if (value !== 0) {\n                cur.minRooms = value;\n                this.setState({filterObj: cur});\n            }else {\n                cur.minRooms = false;\n                this.setState({filterObj})\n            }\n            this.filter()\n        }\n        if (name === 'maxRooms'){\n            let cur = this.state.filterObj;\n            if (value !== Infinity) {\n                cur.maxRooms = value;\n                this.setState({filterObj: cur});\n            }else {\n                cur.maxRooms = false;\n                this.setState({filterObj})\n            }\n            this.filter()\n        }\n        if (name === 'bedroomfilter'){\n            let cur = this.state.filterObj;\n            if (value !== 0) {\n                cur.bedroomfilter = value;\n                this.setState({filterObj: cur});\n            }else {\n                cur.bedroomfilter = false;\n                this.setState({filterObj})\n            }\n            this.filter()\n        }\n        if (name === 'roomfilter'){\n            let cur = this.state.filterObj;\n            if (value !== 0) {\n                cur.roomfilter = value;\n                this.setState({filterObj: cur});\n            }else {\n                cur.roomfilter = false;\n                this.setState({filterObj})\n            }\n            this.filter();\n        }\n        if (name === 'for_sell'){\n            let checkState = this.state.filterObj;\n            checkState.for_sell = !checkState.for_sell;\n            this.setState({filterObj:checkState});\n            this.filter();\n        }\n        if (name === 'for_rent'){\n            let checkState = this.state.filterObj;\n            checkState.for_rent = !checkState.for_rent;\n            this.setState({filterObj:checkState});\n            this.filter();\n        }\n        if (name === 'sortby'){\n            let checkState = this.state.filterObj;\n            checkState.sort_by = value;\n            this.setState({filterObj:checkState});\n            this.filter();\n        }\n        if (name === 'restArray'){\n            for (const property in filterObj){\n                filterObj[property] = false;\n            }\n            this.setState({isFilted:false})\n        }\n    };\n    filter(){\n        const {allApartments, filterObj} = this.state;\n        let filterArray = allApartments;\n        for (let i=0;i<allApartments.length;i++){\n            for (const property in filterObj){\n                if (filterObj[property]){\n                    if (property === 'cityFilter'){\n                        filterArray = filterArray.filter(apartment => this.checkText(apartment,filterObj.cityFilter));\n                    }\n                    if (property === 'minPrice'){\n                        filterArray = filterArray.filter(apartment => this.checkMinRange(apartment,filterObj.minPrice,'price'));\n                    }\n                    if (property === 'maxPrice'){\n                        filterArray = filterArray.filter(apartment => this.checkMaxRange(apartment,filterObj.maxPrice,'price'));\n                    }\n                    if (property === 'minBeds'){\n                        filterArray = filterArray.filter(apartment => this.checkMinRange(apartment,filterObj.minBeds,'number_of_beds'));\n                    }\n                    if (property === 'maxBeds'){\n                        filterArray = filterArray.filter(apartment => this.checkMaxRange(apartment,filterObj.maxBeds,'number_of_beds'));\n                    }\n                    if (property === 'roomfilter'){\n                        filterArray = filterArray.filter(apartment => this.checkMinRange(apartment,filterObj.roomfilter,'number_of_rooms'));\n                    }\n                    if (property === 'bedroomfilter'){\n                        filterArray = filterArray.filter(apartment => this.checkMinRange(apartment,filterObj.bedroomfilter,'number_of_beds'));\n                    }\n                    if (property === 'minRooms'){\n                        filterArray = filterArray.filter(apartment => this.checkMinRange(apartment,filterObj.minBeds,'number_of_rooms'));\n                    }\n                    if (property === 'maxRooms'){\n                        filterArray = filterArray.filter(apartment => this.checkMaxRange(apartment,filterObj.maxRooms,'number_of_rooms'));\n                    }\n                    if (property === 'for_sell'){\n                        filterArray = filterArray.filter(apartment => apartment.for_sale);\n                    }\n                    if (property === 'for_rent'){\n                        filterArray = filterArray.filter(apartment => apartment.for_sale);\n                    }\n                }\n            }\n        }\n        if (this.state.filterObj.sort_by){\n            if (this.state.filterObj.sort_by === 'formExpensive'){\n                filterArray = filterArray.sort((a,b) => (a.price < b.price) ? 1 : ((b.price < a.price) ? -1 : 0));\n            } else if (this.state.filterObj.sort_by === 'formCheapest'){\n                filterArray = filterArray.sort((a,b) => (a.price > b.price) ? 1 : ((b.price > a.price) ? -1 : 0));\n            }\n        }\n        this.checkIfFilted();\n        this.setState({filterList:filterArray})\n    };\n    checkIfFilted =() => {\n        const filters = this.state.filterObj;\n        for (const property in filters){\n            if (filters[property]){\n                this.setState({isFilted:true});\n                break;\n            } else {\n                this.setState({isFilted:false})\n            }\n        }\n    };\n    checkText(apartment,value){\n        let curCity = this.getCitiesDataById(apartment.cityId);\n        return curCity.label.toLowerCase().indexOf(value.toLowerCase()) !== -1 ||\n            curCity.country.toLowerCase().indexOf(value.toLowerCase()) !== -1 ||\n            (curCity.country.toLowerCase()+\" \"+curCity.label.toLowerCase()).indexOf(value.toLowerCase()) !== -1 ;\n    }\n    componentDidMount(){\n        this.getdata();\n        if (this.props.routerData){\n            let cur = this.state.filterObj;\n            cur.cityFilter = this.props.routerData;\n            this.setState({filterObj: cur});\n            document.getElementById('searchInput').value = this.props.routerData;\n            this.filter();\n        }\n    }\n    async getdata(){\n        const data = await axios.get(`http://localhost:5000/apartments`);\n        this.setState({allApartments:data.data.apartments,loading:false});\n    }\n\n    getCitiesDataById = (id) => {\n        return cities.find(city => city.id === parseInt(id))\n    };\n    checkMinRange(value,min,type) {\n        let curVal = value[type];\n        if (type === 'price'){\n            curVal = value[type]*100000\n        }\n        min = (min === undefined || isNaN(min) || min === '') ? 0  : min;\n        return (curVal >= min);\n    }\n    checkMaxRange(value,max,type) {\n        let curVal = value[type];\n        if (type === 'price'){\n            curVal = value[type]*100000\n        }\n        max = (max === undefined || isNaN(max) || max === '') ? Infinity  : max;\n        return (curVal <= max);\n    }\n\n\n    render() {\n        return (\n            <div>\n                <SearchNav handleInputChange={this.handleInputChange}/>\n                {this.state.loading ? <SearchPageLoading array={searchLoadingData} /> :\n                <div className={'container-fluid'}>\n                    <SortResults resultsLength={this.state.allApartments.length} handleInputChange={this.handleInputChange}/>\n                    <div id={'apartment_row'} className={'row'}>\n                            {this.state.allApartments.map((item,i) => {\n                            return (\n                                <Card {...item} cardType={'apartment'}  key = {i}/>\n                            )})\n                        }\n                    </div>\n                </div>}\n            </div>\n\n\n        )\n    }\n}\n\nexport default Gallery;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}